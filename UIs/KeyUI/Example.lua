--Example for KeyUI Libr

-- See the bottom also for some functions
-- This example uses the KeyUI v2

local KeyUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/FFJ1/Roblox-Exploits/main/UIs/KeyUI/KeyUIv2.lua"))()

local window = KeyUI.CreateWindow({
  ["Key"] = "1234", -- Bcrypt Hash, String or a Raw Url, see bottom for more details.
  ["GetKeyLink"] = "https://example.com", -- Link that users can copy to get the key from.
  ["Whitelisted"] = {1234, 1234, 1234}, -- An array of UserIDs or a raw url, format at bottom.
  ["Theme"] = { -- Optional, custom themes. (hex only)
    ["Text"] = "00ff00",
    ["Border"] = "00ff00",
    ["Background"] = "000000"
  },
  ["Text"] = { -- Optional, custom messages.
    ["Title"] = "Key System",
    ["Body"] = "Enter password to access..",
    ["Fail"] = "Invalid key",
    ["Pass"] = "Access granted"
  }
})

window.Failed = function()
  print("You gave a wrong Key")
end

window.Passed = function()
  print("You gave the correct key")
  window.Destroy() -- Destroys the UI
end

window.Whitelisted = function()
  print("You were bypassed for being whitelisted.")
  window.Destroy()
end

window.Cancelled = function()
  print("You cancelled the UI")
  window.Destroy()
end

--[[
IMPORTANT: You should always destroy the window with window.Destroy() if user has passed, whitelisted or cancelled, a new window cannot be opened until the old one has been destroyed.


Supported Key formats:
1. Normal String: A normal string with your key.
2. Bcrypted String: This is your key in encrypted format. Using this ensures that your key cannot be viewed but can only be matched with a key if it's correct or not. It adds extra security. You can generate your encrypted key with any round between 4 and 10 at https://bcrypt-generator.com
3. Raw URL: A raw url of any website that just displays the key either in Normal String or Bcrypted String as a raw text.


Template for Whitelisted Raw Link:
{
   "Whitelisted":[
      123456789,
      123456789,
      123456789
   ]
}

]]--